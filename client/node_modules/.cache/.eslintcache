[{"/Users/aarontanner/project-x/client/src/index.js":"1","/Users/aarontanner/project-x/client/src/reportWebVitals.js":"2","/Users/aarontanner/project-x/client/src/App.js":"3","/Users/aarontanner/project-x/client/src/pages/Home.js":"4","/Users/aarontanner/project-x/client/src/components/NavBar.js":"5","/Users/aarontanner/project-x/client/src/components/Header.js":"6","/Users/aarontanner/project-x/client/src/components/ProjectCard.js":"7","/Users/aarontanner/project-x/client/src/utils/queries.js":"8","/Users/aarontanner/project-x/client/src/components/LoginHeader.js":"9","/Users/aarontanner/project-x/client/src/components/ChartDonut.js":"10","/Users/aarontanner/project-x/client/src/pages/Landing.js":"11","/Users/aarontanner/project-x/client/src/components/TaskCard.js":"12","/Users/aarontanner/project-x/client/src/utils/mutations.js":"13","/Users/aarontanner/project-x/client/src/pages/Login.js":"14","/Users/aarontanner/project-x/client/src/pages/Profile.js":"15","/Users/aarontanner/project-x/client/src/pages/Projects.js":"16","/Users/aarontanner/project-x/client/src/pages/Communication.js":"17","/Users/aarontanner/project-x/client/src/utils/auth.js":"18","/Users/aarontanner/project-x/client/src/pages/Logout.js":"19","/Users/aarontanner/project-x/client/src/pages/SingleProject.js":"20","/Users/aarontanner/project-x/client/src/components/Kanban.js":"21","/Users/aarontanner/project-x/client/src/components/ProjectTaskCard.js":"22","/Users/aarontanner/project-x/client/src/components/CreateTeam.js":"23","/Users/aarontanner/project-x/client/src/components/modals/AddProjectModal.js":"24","/Users/aarontanner/project-x/client/src/components/UserCard.js":"25","/Users/aarontanner/project-x/client/src/components/modals/TeamModal.js":"26","/Users/aarontanner/project-x/client/src/components/modals/CreateTeamModal.js":"27"},{"size":419,"mtime":1694631546004,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1690511416828,"results":"30","hashOfConfig":"29"},{"size":2055,"mtime":1694629014069,"results":"31","hashOfConfig":"29"},{"size":1648,"mtime":1696359997790,"results":"32","hashOfConfig":"29"},{"size":2827,"mtime":1695071200254,"results":"33","hashOfConfig":"29"},{"size":469,"mtime":1691472570204,"results":"34","hashOfConfig":"29"},{"size":3193,"mtime":1695842643207,"results":"35","hashOfConfig":"29"},{"size":1478,"mtime":1693964389849,"results":"36","hashOfConfig":"29"},{"size":1105,"mtime":1691472267469,"results":"37","hashOfConfig":"29"},{"size":846,"mtime":1691540555230,"results":"38","hashOfConfig":"29"},{"size":322,"mtime":1691272113171,"results":"39","hashOfConfig":"29"},{"size":2541,"mtime":1691538299891,"results":"40","hashOfConfig":"29"},{"size":2252,"mtime":1697657222851,"results":"41","hashOfConfig":"29"},{"size":4042,"mtime":1691543838807,"results":"42","hashOfConfig":"29"},{"size":1364,"mtime":1696308800937,"results":"43","hashOfConfig":"29"},{"size":1712,"mtime":1696308702342,"results":"44","hashOfConfig":"29"},{"size":435,"mtime":1694631467356,"results":"45","hashOfConfig":"29"},{"size":1009,"mtime":1691484168417,"results":"46","hashOfConfig":"29"},{"size":351,"mtime":1696308542989,"results":"47","hashOfConfig":"29"},{"size":2829,"mtime":1695113333212,"results":"48","hashOfConfig":"29"},{"size":3553,"mtime":1694632681190,"results":"49","hashOfConfig":"29"},{"size":0,"mtime":1694510911875,"results":"50","hashOfConfig":"29"},{"size":2242,"mtime":1698991589321,"results":"51","hashOfConfig":"29"},{"size":5438,"mtime":1695113848132,"results":"52","hashOfConfig":"29"},{"size":1139,"mtime":1698988097184,"results":"53","hashOfConfig":"29"},{"size":2811,"mtime":1698991451077,"results":"54","hashOfConfig":"29"},{"size":1460,"mtime":1698989217182,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"d2fie8",{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"59"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"59"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"59"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"59"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"59"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"59"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"59"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"59"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"59"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"59"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"59"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/aarontanner/project-x/client/src/index.js",[],[],[],"/Users/aarontanner/project-x/client/src/reportWebVitals.js",[],[],"/Users/aarontanner/project-x/client/src/App.js",[],[],"/Users/aarontanner/project-x/client/src/pages/Home.js",["150","151","152","153","154"],[],"import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport NavBar from \"../components/NavBar\";\nimport ProjectCard from \"../components/ProjectCard\";\nimport UserCard from \"../components/UserCard\";\nimport ChartDonut from \"../components/ChartDonut\";\nimport TaskCard from \"../components/TaskCard\";\n\nimport { QUERY_PROJECTS, QUERY_USERS, QUERY_ME } from \"../utils/queries\";\nimport Auth from \"../utils/auth\";\nimport TeamModal from \"../components/modals/TeamModal\";\n\nexport default function Home() {\n  const { data: userData } = useQuery(QUERY_USERS);\n  const { data: projectData } = useQuery(QUERY_PROJECTS);\n  const { data: myData } = useQuery(QUERY_ME);\n\n  const users = userData?.users || [];\n  const projects = projectData?.projects || [];\n  const profile = myData?.me || [];\n\n  // let meProjects = projects.filter((project) => {\n  //   for (let i = 0; i < profile.projects.length; i++) {\n  //     if (profile.projects[i]._id === project._id) {\n  //       return project;\n  //     }\n  //   }\n  // });\n\n  return (\n    <div className=\"container-fluid text-center mt-5\">\n      <div className=\"row text-center\">\n        <div className=\"home-left col-6\">\n          <ProjectCard projects={projects} profile={profile} />\n          {/* <TaskCard myTasks={profile.tasks} /> */}\n        </div>\n        <div className=\"col-6 d-flex flex-column\">\n          <div className=\"donut\">\n            <ChartDonut myProjects={profile.projects} />\n          </div>\n          <div className=\"team\">\n            <UserCard users={users} myTeams={profile.teams} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/aarontanner/project-x/client/src/components/NavBar.js",["155","156","157"],[],"import React from \"react\";\nimport Header from \"./Header.js\";\nimport * as Icon from \"react-bootstrap-icons\";\nimport LoginHeader from \"./LoginHeader.js\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN } from \"../utils/mutations.js\";\nimport Auth from \"../utils/auth.js\";\nimport Modal from \"./modals/AddProjectModal.js\";\n// import MyStopwatch from './Watch.js'\n\nexport default function NavBar() {\n  const style = {\n    color: \"whitesmoke\",\n    textDecoration: \"none\",\n  };\n\n  const location = useLocation();\n\n  const [login, {error}] = useMutation(LOGIN);\n\n  async function demoGo() {\n    try {\n      const { data } = await login({\n        variables: {\n          username: \"Demo\",\n          email: \"demo@projectx.com\",\n          password: \"password\"\n        }\n      })\n      Auth.login(data.login.token);\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  return (\n    <div>\n      <LoginHeader />\n      <div className=\"navbar\">\n        <ul className=\"nav d-flex flex-column align-items-start w-100\">\n          <Header />\n          <li className=\"nav-item my-3 d-flex align-items-center\">\n            <Link to={Auth.loggedIn() ? \"/\" : \"/landing\"} style={style}>\n              <Icon.Speedometer color=\"whitesmoke\" size={25} className=\"mx-3\" />\n              Dashboard\n            </Link>\n          </li>\n          <li className=\"nav-item my-3 d-flex align-items-center\">\n            <Link to={Auth.loggedIn() ? \"/projects\" : \"/landing\"} style={style}>\n              <Icon.Check2Circle\n                color=\"whitesmoke\"\n                size={25}\n                className=\"mx-3\"\n              />\n              Projects\n            </Link>\n          </li>\n          <li className=\"nav-item my-3 d-flex align-items-center\">\n            <Link to={Auth.loggedIn() ? \"/me\" : \"/landing\"} style={style}>\n              <Icon.PersonCircle\n                color=\"whitesmoke\"\n                size={25}\n                className=\"mx-3\"\n              />\n              Profile\n            </Link>\n          </li>\n          <li className=\"nav-item my-3 d-flex align-items-center\">\n            <Link\n              to={Auth.loggedIn() ? \"/communication\" : \"/landing\"}\n              style={style}\n            >\n              <Icon.Messenger color=\"whitesmoke\" size={25} className=\"mx-3\" />\n              Communication\n            </Link>\n          </li>\n        </ul>\n        {location.pathname === \"/landing\" ||\n        location.pathname === \"/login\" ||\n        location.pathname === \"/signup\" ? (\n          <button type=\"button\" className=\"btn btn-outline-light\" onClick={demoGo}>\n            Demo\n          </button>\n        ) : (\n          <div></div>\n        )}\n        {/* <div id=\"watch\">\n      <MyStopwatch />\n      </div> */}\n      </div>\n    </div>\n  );\n}\n","/Users/aarontanner/project-x/client/src/components/Header.js",[],[],"/Users/aarontanner/project-x/client/src/components/ProjectCard.js",["158","159","160","161"],[],"import React from \"react\";\nimport * as Icon from \"react-bootstrap-icons\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { REMOVE_PROJECT } from \"../utils/mutations\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\nimport Tooltip from \"react-bootstrap\";\nimport AddProjectModal from \"../components/modals/AddProjectModal\";\n\nexport default function ProjectCard({ projects, profile }) {\n  const style = {\n    color: \"whitesmoke\",\n    textDecoration: \"none\",\n  };\n\n  const [removeProject, { error }] = useMutation(REMOVE_PROJECT);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  async function handleTrash(event) {\n    event.preventDefault();\n    const projectId = event.target.id;\n    try {\n      const { data } = await removeProject({\n        variables: { projectId: projectId },\n      });\n      window.location.reload();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return (\n    <div className=\"list-group w-100\" data-bs-theme=\"dark\">\n      <div className=\"project-title text-start border border-light rounded bg-primary p-3 d-flex justify-content-between\">\n        <h3 className=\"proj-title\">\n          <Icon.CheckCircleFill color=\"whitesmoke\" size={25} /> Projects\n        </h3>\n        {location.pathname === \"/projects\" ? <AddProjectModal /> : console.log(\"do nothing\")}\n      </div>\n      <ul className=\"Projects list-group mt-2\" data-bs-theme=\"dark\">\n        {projects.map((project) => {\n          return (\n            <Link\n              to={\n                location.pathname === \"/projects\"\n                  ? project._id\n                  : console.log(\"do nothing\")\n              }\n              key={project._id}\n              style={style}\n            >\n              <div className=\"list-group-item\">\n                <div className=\"d-flex w-100 justify-content-between\">\n                  <h5 className=\"mb-1 text-primary\">{project.projectName}</h5>\n                  <small>\n                    {location.pathname === '/projects' ? \n                    <Icon.Trash3Fill\n                      id={project._id}\n                      color=\"whitesmoke\"\n                      size={25}\n                      onClick={handleTrash}\n                    ></Icon.Trash3Fill> \n                    : console.log(\"do nothing\")}\n                    Deadline: {project.deadline}\n                  </small>\n                </div>\n                <p className=\"mb-1 text-start\">{project.description}</p>\n                <div\n                  className=\"progress\"\n                  role=\"progressbar\"\n                  aria-label=\"Example with label\"\n                  aria-valuenow=\"50\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                >\n                  <div\n                    className=\"progress-bar\"\n                    style={{ width: `${(project.completion / 10) * 5}rem ` }}\n                  >\n                    {project.completion}%\n                  </div>\n                </div>\n              </div>\n            </Link>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","/Users/aarontanner/project-x/client/src/utils/queries.js",[],[],"/Users/aarontanner/project-x/client/src/components/LoginHeader.js",[],[],"/Users/aarontanner/project-x/client/src/components/ChartDonut.js",[],[],"/Users/aarontanner/project-x/client/src/pages/Landing.js",["162"],[],"import React from \"react\";\nimport logo from '../images/x-logo.png'\n\n\nexport default function Landing() {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"Landing row\">\n          <div className=\"logo-big\">\n            <img src={logo} id=\"logo\"></img>\n          </div>\n        </div>\n    </div>\n  );\n}\n","/Users/aarontanner/project-x/client/src/components/TaskCard.js",["163","164","165","166","167","168"],[],"import React, { useState } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { ADD_TASK } from \"../utils/mutations\";\nimport { QUERY_TASKS, QUERY_ME } from \"../utils/queries\";\n\nexport default function TaskCard() {\n  \n  const { data: taskData } = useQuery(QUERY_TASKS);\n  const { data: myData } = useQuery(QUERY_ME);\n\n  const [addTask, { error }] = useMutation(ADD_TASK);\n\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { projectId } = useParams();\n\n  const [formState, setFormState] = useState({\n    taskName: \"\",\n    description: \"\"\n  });\n\n  async function handleClick(event) {\n    event.preventDefault();\n\n    try {\n      const { data } = await addTask({\n        variables: {\n          taskName: formState.taskName,\n          description: formState.description,\n          projectId: projectId\n        },\n      });\n      console.log(formState.description)\n      window.location.reload(false);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === \"taskName\") {\n      setFormState({ ...formState, [name]: value });\n    } else {\n      setFormState({ ...formState, [name]: value });\n    }\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"col-12\" data-bs-theme=\"dark\">\n        <h1>Add a Task</h1>\n        <div className=\"input-group input-group-lg\">\n          <span className=\"input-group-text\" id=\"inputGroup-sizing-lg\">\n            Task Name\n          </span>\n          <input\n            name=\"taskName\"\n            id=\"taskName\"\n            type=\"text\"\n            className=\"form-control\"\n            aria-label=\"Sizing example input\"\n            aria-describedby=\"inputGroup-sizing-lg\"\n            onChange={handleChange}\n          ></input>\n        </div>\n        <div className=\"input-group input-group-lg\">\n          <span className=\"input-group-text\" id=\"inputGroup-sizing-lg\">\n            Description\n          </span>\n          <input\n            name=\"description\"\n            id=\"description\"\n            type=\"text\"\n            className=\"form-control\"\n            aria-label=\"Sizing example input\"\n            aria-describedby=\"inputGroup-sizing-lg\"\n            onChange={handleChange}\n          ></input>\n        </div>\n        <button type=\"button\" className=\"btn btn-primary\" onClick={handleClick}>\n          Add Task\n        </button>\n      </div>\n    </div>\n  );\n}\n","/Users/aarontanner/project-x/client/src/utils/mutations.js",[],[],"/Users/aarontanner/project-x/client/src/pages/Login.js",["169","170"],[],"import React, { useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN, ADD_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\"\n\nexport default function Login() {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [login, { error }] = useMutation(LOGIN);\n  const [addUser, { userError }] = useMutation(ADD_USER);\n\n  const [formState, setFormState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  async function handleClick(event) {\n    event.preventDefault();\n\n    try {\n      if (location.pathname === \"/login\") {\n        const { data } = await login({\n          variables: {\n            email: formState.email,\n            password: formState.password,\n          }\n        });\n        Auth.login(data.login.token)\n        data.login.token\n          ? navigate(\"/\", { replace: true })\n          : alert(\"Try again loser!\");\n      } else {\n        const { data } = await addUser({\n          variables: {\n            username: formState.username,\n            email: formState.email,\n            password: formState.password,\n          },\n        });\n        Auth.login(data.addUser.token)\n        data.addUser.token\n          ? navigate(\"/\", { replace: true })\n          : alert(\"Try again loser!\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === \"username\") {\n      setFormState({ ...formState, [name]: value });\n    } else if (name === \"email\") {\n      setFormState({ ...formState, [name]: value });\n    } else {\n      setFormState({ ...formState, [name]: value });\n    }\n  };\n\n  return (\n    <div className=\"container-fluid d-flex justify-content-center align-items-center\" data-bs-theme=\"dark\">\n      <div className=\"row\">\n        <div className=\"col-12 d-flex align-items-center\">\n          <div className=\"login-box d-flex flex-column gap-2\">\n            {location.pathname === \"/login\" ? <h1>Login</h1> : <h1>Sign-up</h1>}\n            {location.pathname === \"/signup\" ? (\n              <div className=\"input-group input-group-lg\">\n                <span className=\"input-group-text\" id=\"inputGroup-sizing-lg\">\n                  Username\n                </span>\n                <input\n                  name=\"username\"\n                  id=\"username\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  aria-label=\"Sizing example input\"\n                  aria-describedby=\"inputGroup-sizing-lg\"\n                  onChange={handleChange}\n                ></input>\n              </div>\n            ) : (\n              <div></div>\n            )}\n            <div className=\"input-group input-group-lg\">\n              <span className=\"input-group-text\" id=\"inputGroup-sizing-lg\">\n                Email\n              </span>\n              <input\n                name=\"email\"\n                id=\"email\"\n                type=\"text\"\n                className=\"form-control\"\n                aria-label=\"Sizing example input\"\n                aria-describedby=\"inputGroup-sizing-lg\"\n                onChange={handleChange}\n              ></input>\n            </div>\n            <div className=\"input-group input-group-lg\">\n              <span className=\"input-group-text\" id=\"inputGroup-sizing-lg\">\n                Password\n              </span>\n              <input\n                name=\"password\"\n                id=\"password\"\n                type=\"text\"\n                className=\"form-control\"\n                aria-label=\"Sizing example input\"\n                aria-describedby=\"inputGroup-sizing-lg\"\n                onChange={handleChange}\n              ></input>\n            </div>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={handleClick}\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/aarontanner/project-x/client/src/pages/Profile.js",["171","172"],[],"import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport {\n  QUERY_ME,\n  QUERY_PROJECTS,\n  QUERY_TASKS,\n  QUERY_USERS,\n} from \"../utils/queries\";\nimport TeamCard from \"../components/UserCard\";\nimport ProjectCard from \"../components/ProjectCard\";\nimport CreateTeam from \"../components/CreateTeam\";\n\nexport default function Profile() {\n  const { data: projectData } = useQuery(QUERY_PROJECTS);\n  const { data: taskData } = useQuery(QUERY_TASKS);\n  const { data: userData } = useQuery(QUERY_USERS);\n  const { data: myData } = useQuery(QUERY_ME);\n\n  const profile = myData?.me || [];\n  const projects = projectData?.projects || [];\n  const tasks = taskData?.tasks || [];\n  const users = userData?.users || [];\n\n  return (\n    <div className=\"Profile container mt-5\" data-bs-theme=\"dark\">\n      <div className=\"profile-header container col-11 d-flex align-items-center\">\n        <img id=\"pfp\" src={profile.image} alt=\"\"></img>\n        <h1>{profile.username}</h1>\n      </div>\n      <div className=\"container-fluid mt-3\">\n        <div className=\"row gap-2 d-flex justify-content-center\">\n          <div className=\"profile-left col-7\">\n            <ProjectCard projects={projects} />\n          </div>\n          <div className=\"profile-right col-4\">\n            <TeamCard users={users} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/aarontanner/project-x/client/src/pages/Projects.js",["173","174","175","176","177","178","179","180","181","182"],[],"import React, { useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { ADD_PROJECT, ASSIGN_TASK, ADD_TASK } from \"../utils/mutations\";\nimport { QUERY_PROJECTS } from \"../utils/queries\";\nimport ProjectCard from \"../components/ProjectCard\";\nimport TaskCard from \"../components/TaskCard\";\nimport SingleProject from \"./SingleProject\";\n\nexport default function Projects() {\n  const { data: projectData, loading: projectLoading } = useQuery(QUERY_PROJECTS);\n  const projects = projectData?.projects || [];\n\nconst [addProject, {error}] = useMutation(ADD_PROJECT);\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [formState, setFormState] = useState({\n    projectName: \"\",\n    description: \"\",\n  });\n\n  async function handleClick(event) {\n    event.preventDefault();\n\n    try {\n        const {data} = await addProject({\n            variables: {\n                projectName: formState.projectName,\n                description: formState.description\n            }\n        });\n        window.location.reload(false);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === \"projectName\") {\n      setFormState({ ...formState, [name]: value });\n    } else {\n      setFormState({ ...formState, [name]: value });\n    }\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"Projects row mt-5\">\n        <div className=\"project-list col\">\n          {projectLoading? <h1>loading...</h1> : <ProjectCard projects={projects} />}\n        </div>\n\n        \n      </div>\n    </div>\n  );\n}\n","/Users/aarontanner/project-x/client/src/pages/Communication.js",["183"],[],"import React from \"react\";\nimport Kanban from \"../components/Kanban\";\nimport CreateTeam from \"../components/CreateTeam\";\n\nexport default function Communication() {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n            <h1>Communication</h1>\n        </div>\n        <div className=\"row\">\n          <Kanban/>\n        </div>\n        <div>\n          {/* <CreateTeam /> */}\n        </div>\n    </div>\n  );\n}","/Users/aarontanner/project-x/client/src/utils/auth.js",["184"],[],"import decode from 'jwt-decode';\n\nclass AuthService {\n  getUser() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n  }\n}\n\nexport default new AuthService();","/Users/aarontanner/project-x/client/src/pages/Logout.js",[],[],"/Users/aarontanner/project-x/client/src/pages/SingleProject.js",["185","186","187","188","189","190","191","192","193"],[],"import React, { useState } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { ADD_TASK, REMOVE_TASK } from \"../utils/mutations\";\nimport { QUERY_TASKS, QUERY_ME, QUERY_PROJECTS } from \"../utils/queries\";\nimport * as Icon from \"react-bootstrap-icons\";\nimport AddProjectModal from \"../components/modals/AddProjectModal\"\n\nexport default function SingleProject() {\n  const {\n    data: taskData,\n    loading: taskLoading,\n    error: taskError,\n  } = useQuery(QUERY_TASKS);\n  const {\n    data: projectData,\n    loading: projectLoading,\n    error: projectError,\n  } = useQuery(QUERY_PROJECTS);\n\n  const projects = projectData?.projects || [];\n  const tasks = taskData?.tasks || [];\n  const { projectId } = useParams();\n\n  const [removeTask, { error }] = useMutation(REMOVE_TASK);\n\n  async function handleTrash(event) {\n    event.preventDefault();\n    try {\n      console.log(event.target.id);\n      const { data } = await removeTask({\n        variables: {\n          taskId: event.target.id,\n          projectId: projectId,\n        },\n      });\n      window.location.reload();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  if (projectLoading || taskLoading) {\n    return <div>Loading...</div>;\n  } else {\n    const thisProject = projects.filter((project) => project._id === projectId);\n    const thisTask = tasks.filter((task) => task.projectId === projectId);\n    return (\n      <div>\n        <h1>Project Data</h1>\n        <ul className=\"list-group mt-3\" data-bs-theme=\"dark\">\n          {/* <li className=\"list-group-item\">{thisProject[0]._id}</li> */}\n          <li className=\"list-group-item\">{thisProject[0].projectName}</li>\n          <li className=\"list-group-item\">{thisProject[0].description}</li>\n          <li className=\"list-group-item\">\n            Completion: {thisProject[0].completion}%\n          </li>\n          <li className=\"list-group-item d-flex justify-content-between\">Tasks:<AddProjectModal /></li>\n          <li className=\"list-group-item\">\n            {thisTask.length ? \n              thisTask.map((task) => {\n                return (\n                  <li className=\"list-group-item d-flex justify-content-between\">\n                    <div key={task._id}>{task.taskName}</div>\n                    <div>\n                      <Icon.Trash3Fill\n                        id={task._id}\n                        color=\"whitesmoke\"\n                        size={25}\n                        onClick={handleTrash}\n                      ></Icon.Trash3Fill>\n                    </div>\n                  </li>\n                );\n              })\n             : \n             <li className=\"list-group-item\">Tasks Not Yet Assigned</li>  \n            }\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n","/Users/aarontanner/project-x/client/src/components/Kanban.js",[],[],"/Users/aarontanner/project-x/client/src/components/ProjectTaskCard.js",[],[],"/Users/aarontanner/project-x/client/src/components/CreateTeam.js",["194","195","196","197","198","199","200","201"],[],"/Users/aarontanner/project-x/client/src/components/modals/AddProjectModal.js",["202","203","204","205"],[],"import React, { useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_TASK, ADD_PROJECT } from \"../../utils/mutations\";\n\nexport default function Modal() {\n  const [showModal, setShowModal] = useState(false);\n  const location = useLocation();\n  const { projectId } = useParams();\n\n  const [addTask, { error: taskError }] = useMutation(ADD_TASK);\n  const [addProject, { error: projectError }] = useMutation(ADD_PROJECT);\n\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  const [formState, setFormState] = useState({\n    taskName: \"\",\n    description: \"\",\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === \"taskName\") {\n      setFormState({ ...formState, [name]: value });\n    } else {\n      setFormState({ ...formState, [name]: value });\n    }\n  };\n\n  async function handleClick(event) {\n    event.preventDefault();\n\n    try {\n      if (location.pathname === \"projects\") {\n        const { data: projectData } = await addProject({\n          variables: {\n            projectName: formState.projectName,\n            description: formState.description,\n          },\n        });\n      } else {\n        const { data: taskData } = await addTask({\n          variables: {\n            taskName: formState.taskName,\n            description: formState.description,\n            projectId: projectId,\n          },\n        });\n      }\n      window.location.reload(false);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return (\n    <div>\n      <button className=\"btn btn-light\" onClick={openModal}>\n        {location.pathname === \"/projects\" ? \"Add Project\" : \"Add Task\"}\n      </button>\n\n      <div\n        className={`modal ${showModal ? \"show\" : \"\"}`}\n        tabIndex=\"-1\"\n        role=\"dialog\"\n        style={{ display: showModal ? \"block\" : \"none\" }}\n      >\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\">\n                {location.pathname === \"/projects\" ? \"Add Project\" : \"Add Task\"}\n              </h5>\n              <button type=\"button\" className=\"close\" onClick={closeModal}>\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              {location.pathname === \"/projects\" ? (\n                <div className=\"input-group input-group-lg\">\n                  <span className=\"input-group-text\" id=\"inputGroup-sizing-lg\">\n                    Project Name\n                  </span>\n                  <input\n                    name=\"projectName\"\n                    id=\"projectName\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    aria-label=\"Sizing example input\"\n                    aria-describedby=\"inputGroup-sizing-lg\"\n                    onChange={handleChange}\n                  ></input>\n                  <div className=\"input-group input-group-lg\">\n                    <span className=\"input-group-text\">Description</span>\n                    <textarea\n                      name=\"description\"\n                      id=\"description\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      aria-label=\"With textarea\"\n                      onChange={handleChange}\n                    ></textarea>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"col-12\" data-bs-theme=\"dark\">\n                  <div className=\"input-group input-group-lg\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroup-sizing-lg\"\n                    >\n                      Task Name\n                    </span>\n                    <input\n                      name=\"taskName\"\n                      id=\"taskName\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      aria-label=\"Sizing example input\"\n                      aria-describedby=\"inputGroup-sizing-lg\"\n                      onChange={handleChange}\n                    ></input>\n                    <div className=\"input-group input-group-lg\">\n                      <span className=\"input-group-text\">Description</span>\n                      <textarea\n                        name=\"description\"\n                        id=\"description\"\n                        type=\"text\"\n                        className=\"form-control\"\n                        aria-label=\"With textarea\"\n                        onChange={handleChange}\n                      ></textarea>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={closeModal}\n              >\n                Close\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={handleClick}\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/aarontanner/project-x/client/src/components/UserCard.js",["206"],[],"/Users/aarontanner/project-x/client/src/components/modals/TeamModal.js",["207","208","209","210","211","212","213"],[],"/Users/aarontanner/project-x/client/src/components/modals/CreateTeamModal.js",["214","215","216","217","218","219"],[],{"ruleId":"220","severity":1,"message":"221","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":11},{"ruleId":"220","severity":1,"message":"224","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":14},{"ruleId":"220","severity":1,"message":"225","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":16},{"ruleId":"220","severity":1,"message":"226","line":11,"column":8,"nodeType":"222","messageId":"223","endLine":11,"endColumn":12},{"ruleId":"220","severity":1,"message":"227","line":12,"column":8,"nodeType":"222","messageId":"223","endLine":12,"endColumn":17},{"ruleId":"220","severity":1,"message":"228","line":5,"column":29,"nodeType":"222","messageId":"223","endLine":5,"endColumn":40},{"ruleId":"220","severity":1,"message":"229","line":9,"column":8,"nodeType":"222","messageId":"223","endLine":9,"endColumn":13},{"ruleId":"220","severity":1,"message":"230","line":20,"column":18,"nodeType":"222","messageId":"223","endLine":20,"endColumn":23},{"ruleId":"220","severity":1,"message":"231","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":15},{"ruleId":"220","severity":1,"message":"230","line":17,"column":27,"nodeType":"222","messageId":"223","endLine":17,"endColumn":32},{"ruleId":"220","severity":1,"message":"232","line":19,"column":9,"nodeType":"222","messageId":"223","endLine":19,"endColumn":17},{"ruleId":"220","severity":1,"message":"233","line":25,"column":15,"nodeType":"222","messageId":"223","endLine":25,"endColumn":19},{"ruleId":"234","severity":1,"message":"235","line":10,"column":13,"nodeType":"236","endLine":10,"endColumn":39},{"ruleId":"220","severity":1,"message":"237","line":9,"column":17,"nodeType":"222","messageId":"223","endLine":9,"endColumn":25},{"ruleId":"220","severity":1,"message":"238","line":10,"column":17,"nodeType":"222","messageId":"223","endLine":10,"endColumn":23},{"ruleId":"220","severity":1,"message":"230","line":12,"column":21,"nodeType":"222","messageId":"223","endLine":12,"endColumn":26},{"ruleId":"220","severity":1,"message":"239","line":14,"column":9,"nodeType":"222","messageId":"223","endLine":14,"endColumn":17},{"ruleId":"220","severity":1,"message":"232","line":15,"column":9,"nodeType":"222","messageId":"223","endLine":15,"endColumn":17},{"ruleId":"220","severity":1,"message":"233","line":27,"column":15,"nodeType":"222","messageId":"223","endLine":27,"endColumn":19},{"ruleId":"220","severity":1,"message":"230","line":12,"column":19,"nodeType":"222","messageId":"223","endLine":12,"endColumn":24},{"ruleId":"220","severity":1,"message":"240","line":13,"column":21,"nodeType":"222","messageId":"223","endLine":13,"endColumn":30},{"ruleId":"220","severity":1,"message":"241","line":11,"column":8,"nodeType":"222","messageId":"223","endLine":11,"endColumn":18},{"ruleId":"220","severity":1,"message":"242","line":21,"column":9,"nodeType":"222","messageId":"223","endLine":21,"endColumn":14},{"ruleId":"220","severity":1,"message":"243","line":4,"column":23,"nodeType":"222","messageId":"223","endLine":4,"endColumn":34},{"ruleId":"220","severity":1,"message":"244","line":4,"column":36,"nodeType":"222","messageId":"223","endLine":4,"endColumn":44},{"ruleId":"220","severity":1,"message":"225","line":7,"column":8,"nodeType":"222","messageId":"223","endLine":7,"endColumn":16},{"ruleId":"220","severity":1,"message":"245","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":21},{"ruleId":"220","severity":1,"message":"230","line":14,"column":21,"nodeType":"222","messageId":"223","endLine":14,"endColumn":26},{"ruleId":"220","severity":1,"message":"239","line":16,"column":9,"nodeType":"222","messageId":"223","endLine":16,"endColumn":17},{"ruleId":"220","severity":1,"message":"232","line":17,"column":9,"nodeType":"222","messageId":"223","endLine":17,"endColumn":17},{"ruleId":"220","severity":1,"message":"246","line":24,"column":18,"nodeType":"222","messageId":"223","endLine":24,"endColumn":29},{"ruleId":"220","severity":1,"message":"233","line":28,"column":16,"nodeType":"222","messageId":"223","endLine":28,"endColumn":20},{"ruleId":"220","severity":1,"message":"247","line":40,"column":9,"nodeType":"222","messageId":"223","endLine":40,"endColumn":21},{"ruleId":"220","severity":1,"message":"241","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":18},{"ruleId":"248","severity":1,"message":"249","line":40,"column":1,"nodeType":"250","endLine":40,"endColumn":34},{"ruleId":"220","severity":1,"message":"251","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"252","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":21},{"ruleId":"220","severity":1,"message":"228","line":2,"column":23,"nodeType":"222","messageId":"223","endLine":2,"endColumn":34},{"ruleId":"220","severity":1,"message":"244","line":4,"column":10,"nodeType":"222","messageId":"223","endLine":4,"endColumn":18},{"ruleId":"220","severity":1,"message":"253","line":5,"column":23,"nodeType":"222","messageId":"223","endLine":5,"endColumn":31},{"ruleId":"220","severity":1,"message":"254","line":13,"column":12,"nodeType":"222","messageId":"223","endLine":13,"endColumn":21},{"ruleId":"220","severity":1,"message":"255","line":18,"column":12,"nodeType":"222","messageId":"223","endLine":18,"endColumn":24},{"ruleId":"220","severity":1,"message":"230","line":25,"column":24,"nodeType":"222","messageId":"223","endLine":25,"endColumn":29},{"ruleId":"220","severity":1,"message":"233","line":31,"column":15,"nodeType":"222","messageId":"223","endLine":31,"endColumn":19},{"ruleId":"220","severity":1,"message":"256","line":3,"column":23,"nodeType":"222","messageId":"223","endLine":3,"endColumn":31},{"ruleId":"220","severity":1,"message":"257","line":4,"column":10,"nodeType":"222","messageId":"223","endLine":4,"endColumn":21},{"ruleId":"220","severity":1,"message":"253","line":4,"column":23,"nodeType":"222","messageId":"223","endLine":4,"endColumn":31},{"ruleId":"220","severity":1,"message":"258","line":6,"column":8,"nodeType":"222","messageId":"223","endLine":6,"endColumn":12},{"ruleId":"220","severity":1,"message":"259","line":9,"column":10,"nodeType":"222","messageId":"223","endLine":9,"endColumn":17},{"ruleId":"220","severity":1,"message":"230","line":9,"column":21,"nodeType":"222","messageId":"223","endLine":9,"endColumn":26},{"ruleId":"220","severity":1,"message":"260","line":11,"column":10,"nodeType":"222","messageId":"223","endLine":11,"endColumn":19},{"ruleId":"220","severity":1,"message":"261","line":11,"column":21,"nodeType":"222","messageId":"223","endLine":11,"endColumn":33},{"ruleId":"220","severity":1,"message":"254","line":11,"column":28,"nodeType":"222","messageId":"223","endLine":11,"endColumn":37},{"ruleId":"220","severity":1,"message":"255","line":12,"column":31,"nodeType":"222","messageId":"223","endLine":12,"endColumn":43},{"ruleId":"220","severity":1,"message":"262","line":42,"column":23,"nodeType":"222","messageId":"223","endLine":42,"endColumn":34},{"ruleId":"220","severity":1,"message":"237","line":49,"column":23,"nodeType":"222","messageId":"223","endLine":49,"endColumn":31},{"ruleId":"220","severity":1,"message":"263","line":5,"column":8,"nodeType":"222","messageId":"223","endLine":5,"endColumn":23},{"ruleId":"220","severity":1,"message":"251","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"256","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":18},{"ruleId":"220","severity":1,"message":"264","line":2,"column":20,"nodeType":"222","messageId":"223","endLine":2,"endColumn":31},{"ruleId":"220","severity":1,"message":"253","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":18},{"ruleId":"220","severity":1,"message":"257","line":3,"column":20,"nodeType":"222","messageId":"223","endLine":3,"endColumn":31},{"ruleId":"220","severity":1,"message":"265","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":16},{"ruleId":"220","severity":1,"message":"263","line":5,"column":8,"nodeType":"222","messageId":"223","endLine":5,"endColumn":23},{"ruleId":"220","severity":1,"message":"265","line":2,"column":8,"nodeType":"222","messageId":"223","endLine":2,"endColumn":16},{"ruleId":"220","severity":1,"message":"266","line":3,"column":13,"nodeType":"222","messageId":"223","endLine":3,"endColumn":17},{"ruleId":"220","severity":1,"message":"267","line":4,"column":10,"nodeType":"222","messageId":"223","endLine":4,"endColumn":14},{"ruleId":"220","severity":1,"message":"268","line":8,"column":12,"nodeType":"222","messageId":"223","endLine":8,"endColumn":23},{"ruleId":"220","severity":1,"message":"269","line":10,"column":11,"nodeType":"222","messageId":"223","endLine":10,"endColumn":19},{"ruleId":"220","severity":1,"message":"270","line":14,"column":11,"nodeType":"222","messageId":"223","endLine":14,"endColumn":19},"no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","'NavBar' is defined but never used.","'TaskCard' is defined but never used.","'Auth' is defined but never used.","'TeamModal' is defined but never used.","'useNavigate' is defined but never used.","'Modal' is defined but never used.","'error' is assigned a value but never used.","'Tooltip' is defined but never used.","'navigate' is assigned a value but never used.","'data' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'taskData' is assigned a value but never used.","'myData' is assigned a value but never used.","'location' is assigned a value but never used.","'userError' is assigned a value but never used.","'CreateTeam' is defined but never used.","'tasks' is assigned a value but never used.","'ASSIGN_TASK' is defined but never used.","'ADD_TASK' is defined but never used.","'SingleProject' is defined but never used.","'handleClick' is defined but never used.","'handleChange' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'useLocation' is defined but never used.","'QUERY_ME' is defined but never used.","'taskError' is assigned a value but never used.","'projectError' is assigned a value but never used.","'useQuery' is defined but never used.","'QUERY_USERS' is defined but never used.","'Logo' is defined but never used.","'addUser' is assigned a value but never used.","'formState' is assigned a value but never used.","'setFormState' is assigned a value but never used.","'projectData' is assigned a value but never used.","'CreateTeamModal' is defined but never used.","'useMutation' is defined but never used.","'UserCard' is defined but never used.","'Icon' is defined but never used.","'Link' is defined but never used.","'showTextBox' is assigned a value but never used.","'showText' is assigned a value but never used.","'hideText' is assigned a value but never used."]